{
  "openapi": "3.0.3",
  "info": {
    "title": "Facebook Connect Service",
    "description": "Microservi√ßo para centralizar integra√ß√µes com Facebook Graph API. Permite autentica√ß√£o OAuth2, gerenciamento de tokens e postagens em p√°ginas do Facebook.",
    "version": "1.0.0",
    "contact": {
      "name": "Bruno Vigo",
      "url": "https://www.linkedin.com/in/bruno-vigo"
    }
  },
  "servers": [
    { "url": "http://localhost:4000", "description": "Desenvolvimento Local" },
    { "url": "https://844c4f5bbd8a.ngrok-free.app", "description": "Desenvolvimento via ngrok" }
  ],
  "paths": {
    "/health": {
      "get": { 
        "summary": "Health check", 
        "description": "Verifica o status de sa√∫de do servi√ßo",
        "tags": ["System"],
        "responses": { 
          "200": { 
            "description": "Servi√ßo funcionando normalmente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                },
                "example": {
                  "status": "ok"
                }
              }
            }
          } 
        } 
      }
    },
    "/auth": {
      "post": {
        "summary": "Gerar token JWT para cliente",
        "description": "Autentica um sistema cliente e retorna um token JWT para acesso √†s APIs",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientCredentials"
              },
              "example": {
                "client_id": "test-client-id",
                "client_secret": "test-client-secret"
              }
            }
          }
        },
        "responses": { 
          "200": { 
            "description": "Token JWT gerado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                },
                "example": {
                  "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "token_type": "Bearer"
                }
              }
            }
          }, 
          "400": { 
            "description": "Dados inv√°lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": { 
            "description": "Credenciais inv√°lidas",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/facebook/login": { 
      "get": { 
        "summary": "Iniciar OAuth do Facebook", 
        "description": "Redireciona o usu√°rio para o Facebook para autoriza√ß√£o OAuth2. O usu√°rio ser√° redirecionado de volta para o callback ap√≥s autorizar o acesso √†s p√°ginas.",
        "tags": ["Facebook OAuth"],
        "parameters": [ 
          {
            "name":"state",
            "in":"query",
            "description": "URL de redirecionamento ap√≥s autoriza√ß√£o (opcional)",
            "schema":{"type":"string"},
            "example": "https://meusite.com/callback"
          } 
        ], 
        "responses": { 
          "302": { 
            "description": "Redirecionamento para o Facebook OAuth" 
          } 
        } 
      } 
    },
    "/auth/facebook/callback": { 
      "get": { 
        "summary": "Callback do OAuth Facebook", 
        "description": "Endpoint chamado pelo Facebook ap√≥s autoriza√ß√£o. Processa o c√≥digo de autoriza√ß√£o, troca por token de acesso, salva dados do usu√°rio e p√°ginas. Redireciona para URL especificada no par√¢metro 'state' ou fecha a janela.",
        "tags": ["Facebook OAuth"],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": true,
            "description": "C√≥digo de autoriza√ß√£o do Facebook",
            "schema": {"type": "string"}
          },
          {
            "name": "state",
            "in": "query",
            "description": "URL de redirecionamento",
            "schema": {"type": "string"}
          }
        ],
        "responses": { 
          "200": { 
            "description": "Autoriza√ß√£o processada com sucesso. Retorna HTML que fecha a janela (quando n√£o h√° par√¢metro 'state' v√°lido)." 
          },
          "302": {
            "description": "Redirecionamento para URL especificada no par√¢metro 'state' (quando state √© uma URL v√°lida)"
          },
          "400": {
            "description": "C√≥digo de autoriza√ß√£o ausente ou inv√°lido"
          }
        } 
      } 
    },
    "/posts/page/{pageId}": {
      "post": {
        "summary": "Criar postagem em p√°gina",
        "description": "Cria uma nova postagem na p√°gina do Facebook especificada",
        "tags": ["Posts"],
        "parameters": [ 
          {
            "name":"pageId",
            "in":"path",
            "required":true,
            "description": "ID da p√°gina do Facebook",
            "schema":{"type":"string"},
            "example": "795021823690841"
          } 
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PagePost"
              },
              "example": {
                "message": "üöÄ Teste do microservi√ßo Facebook Connect! Sistema funcionando perfeitamente.",
                "link": "https://github.com",
                "mediaUrl": "https://example.com/image.jpg"
              }
            }
          }
        },
        "responses": { 
          "201": { 
            "description": "Postagem criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                },
                "example": {
                  "id": "795021823690841_122112213224990091"
                }
              }
            }
          }, 
          "400": {
            "description": "Dados da postagem inv√°lidos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": { 
            "description": "Token de autentica√ß√£o inv√°lido ou ausente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }, 
          "404": {
            "description": "P√°gina n√£o encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": { 
            "description": "Rate limit do Facebook atingido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [ { "bearerAuth": [] } ]
      }
    },
    "/posts/page/{pageId}/bulk": {
      "post": {
        "summary": "Criar m√∫ltiplas postagens",
        "description": "Cria m√∫ltiplas postagens sequenciais na p√°gina do Facebook especificada",
        "tags": ["Posts"],
        "parameters": [ 
          {
            "name":"pageId",
            "in":"path",
            "required":true,
            "description": "ID da p√°gina do Facebook",
            "schema":{"type":"string"},
            "example": "795021823690841"
          } 
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { 
                "type": "array", 
                "items": { "$ref": "#/components/schemas/PagePost" },
                "minItems": 1,
                "maxItems": 10
              },
              "example": [
                {"message": "Post 1 do teste em lote üìù"},
                {"message": "Post 2 do teste em lote üöÄ"},
                {"message": "Post 3 do teste em lote ‚úÖ"}
              ]
            }
          }
        },
        "responses": { 
          "201": { 
            "description": "Postagens criadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostResponse"
                  }
                },
                "example": [
                  {"id": "795021823690841_122112213224990091"},
                  {"id": "795021823690841_122112213224990092"},
                  {"id": "795021823690841_122112213224990093"}
                ]
              }
            }
          }, 
          "400": {
            "description": "Array de postagens inv√°lido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": { 
            "description": "Token de autentica√ß√£o inv√°lido ou ausente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }, 
          "429": { 
            "description": "Rate limit do Facebook atingido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [ { "bearerAuth": [] } ]
      }
    },
    "/webhooks/facebook": {
      "get": { 
        "summary": "Verificar webhook do Facebook", 
        "description": "Endpoint usado pelo Facebook para verificar a configura√ß√£o do webhook",
        "tags": ["Webhooks"],
        "parameters": [ 
          {
            "name":"hub.mode",
            "in":"query",
            "required": true,
            "description": "Modo de verifica√ß√£o (sempre 'subscribe')",
            "schema":{"type":"string"},
            "example": "subscribe"
          }, 
          {
            "name":"hub.verify_token",
            "in":"query",
            "required": true,
            "description": "Token de verifica√ß√£o configurado no Facebook",
            "schema":{"type":"string"}
          }, 
          {
            "name":"hub.challenge",
            "in":"query",
            "required": true,
            "description": "Challenge enviado pelo Facebook",
            "schema":{"type":"string"}
          } 
        ], 
        "responses": { 
          "200": { 
            "description": "Challenge retornado com sucesso",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }, 
          "403": { 
            "description": "Token de verifica√ß√£o inv√°lido" 
          } 
        } 
      },
      "post": { 
        "summary": "Receber evento de webhook", 
        "description": "Recebe eventos do Facebook (coment√°rios, mensagens, etc.) e os armazena no banco de dados",
        "tags": ["Webhooks"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "object": {
                    "type": "string",
                    "example": "page"
                  },
                  "entry": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": { 
          "200": { 
            "description": "Evento processado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "received": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }, 
          "401": { 
            "description": "Assinatura do webhook inv√°lida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          } 
        } 
      }
    }
    ,
    "/webhooks/events": {
      "get": {
        "summary": "Listar eventos de webhook",
        "description": "Lista eventos de webhook armazenados no banco de dados",
        "tags": ["Webhooks"],
        "parameters": [
          {
            "name":"pageId",
            "in":"query",
            "description": "Filtrar por ID da p√°gina",
            "schema":{"type":"string"}
          },
          {
            "name":"since",
            "in":"query",
            "description": "Data inicial (ISO 8601)",
            "schema":{"type":"string","format":"date-time"}
          },
          {
            "name":"until",
            "in":"query",
            "description": "Data final (ISO 8601)",
            "schema":{"type":"string","format":"date-time"}
          },
          {
            "name":"limit",
            "in":"query",
            "description": "N√∫mero m√°ximo de eventos",
            "schema":{"type":"integer","default":50,"minimum":1,"maximum":100}
          }
        ],
        "responses": { 
          "200": { 
            "description": "Lista de eventos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {"type": "string"},
                      "eventType": {"type": "string"},
                      "createdAt": {"type": "string", "format": "date-time"}
                    }
                  }
                }
              }
            }
          }, 
          "401": { 
            "description": "N√£o autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          } 
        },
        "security": [ { "bearerAuth": [] } ]
      }
    },
    "/webhooks/events/{id}": {
      "get": {
        "summary": "Obter evento por ID",
        "description": "Retorna detalhes de um evento espec√≠fico de webhook",
        "tags": ["Webhooks"],
        "parameters": [ 
          {
            "name":"id",
            "in":"path",
            "required":true,
            "description": "ID √∫nico do evento",
            "schema":{"type":"string"}
          } 
        ],
        "responses": { 
          "200": { 
            "description": "Detalhes do evento",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {"type": "string"},
                    "eventType": {"type": "string"},
                    "payload": {"type": "object"},
                    "createdAt": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          }, 
          "401": { 
            "description": "N√£o autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }, 
          "404": { 
            "description": "Evento n√£o encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          } 
        },
        "security": [ { "bearerAuth": [] } ]
      }
    }
    ,
    "/privacy": { 
      "get": { 
        "summary": "Pol√≠tica de privacidade", 
        "description": "Retorna a p√°gina HTML com a pol√≠tica de privacidade do servi√ßo",
        "tags": ["Legal"],
        "responses": { 
          "200": { 
            "description": "P√°gina HTML da pol√≠tica de privacidade",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          } 
        } 
      } 
    },
    "/user/{id}": {
      "delete": {
        "summary": "Excluir dados do usu√°rio",
        "description": "Endpoint p√∫blico para exclus√£o de dados do usu√°rio (LGPD/GDPR)",
        "tags": ["Data Privacy"],
        "parameters": [ 
          {
            "name":"id",
            "in":"path",
            "required":true,
            "description": "ID do usu√°rio para exclus√£o",
            "schema":{"type":"string"}
          } 
        ],
        "responses": { 
          "204": { 
            "description": "Dados exclu√≠dos com sucesso" 
          }, 
          "404": { 
            "description": "Usu√°rio n√£o encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          } 
        }
      }
    },
    "/facebook/data_deletion/instructions": { 
      "get": { 
        "summary": "Instru√ß√µes de exclus√£o de dados", 
        "description": "Retorna instru√ß√µes para o Facebook sobre como excluir dados do usu√°rio",
        "tags": ["Data Privacy"],
        "responses": { 
          "200": { 
            "description": "Instru√ß√µes em formato JSON",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {"type": "string"},
                    "confirmation_code": {"type": "string"}
                  }
                }
              }
            }
          } 
        } 
      } 
    },
    "/facebook/data_deletion": { 
      "post": { 
        "summary": "Callback de exclus√£o do Facebook", 
        "description": "Recebe requisi√ß√µes de exclus√£o de dados do Facebook via signed_request",
        "tags": ["Data Privacy"],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "signed_request": {
                    "type": "string",
                    "description": "Requisi√ß√£o assinada do Facebook"
                  }
                }
              }
            }
          }
        },
        "responses": { 
          "200": { 
            "description": "URL de confirma√ß√£o retornada",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {"type": "string"},
                    "confirmation_code": {"type": "string"}
                  }
                }
              }
            }
          } 
        } 
      } 
    },
    "/facebook/data_deletion/status": { 
      "get": { 
        "summary": "Status da exclus√£o de dados", 
        "description": "Verifica o status de uma requisi√ß√£o de exclus√£o de dados",
        "tags": ["Data Privacy"],
        "parameters": [ 
          {
            "name":"id",
            "in":"query",
            "required": true,
            "description": "ID da requisi√ß√£o de exclus√£o",
            "schema":{"type":"string"}
          } 
        ], 
        "responses": { 
          "200": { 
            "description": "Status da exclus√£o",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {"type": "string"},
                    "completed_at": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          } 
        } 
      } 
    }
  },
  "components": {
    "schemas": {
      "PagePost": {
        "type": "object",
        "properties": {
          "message": { 
            "type": "string", 
            "description": "Texto da postagem",
            "example": "üöÄ Teste do microservi√ßo Facebook Connect!"
          },
          "link": { 
            "type": "string", 
            "format": "uri",
            "description": "URL para compartilhar na postagem",
            "example": "https://github.com"
          },
          "mediaUrl": { 
            "type": "string", 
            "format": "uri",
            "description": "URL da imagem ou v√≠deo para postar",
            "example": "https://example.com/image.jpg"
          }
        }
      },
      "PostResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID √∫nico da postagem no Facebook",
            "example": "795021823690841_122112213224990091"
          }
        },
        "required": ["id"]
      },
      "ClientCredentials": {
        "type": "object",
        "properties": {
          "client_id": { 
            "type": "string",
            "description": "ID do cliente/sistema",
            "example": "test-client-id"
          },
          "client_secret": { 
            "type": "string",
            "description": "Chave secreta do cliente",
            "example": "test-client-secret"
          }
        },
        "required": ["client_id", "client_secret"]
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Token JWT para autentica√ß√£o",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "token_type": {
            "type": "string",
            "description": "Tipo do token",
            "example": "Bearer"
          }
        },
        "required": ["access_token", "token_type"]
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status geral do servi√ßo",
            "example": "ok"
          }
        },
        "required": ["status"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "C√≥digo do erro",
            "example": "INVALID_CREDENTIALS"
          },
          "message": {
            "type": "string",
            "description": "Mensagem descritiva do erro",
            "example": "Invalid client credentials"
          }
        },
        "required": ["error"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Token JWT obtido atrav√©s do endpoint /auth"
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "Endpoints de sistema e monitoramento"
    },
    {
      "name": "Authentication", 
      "description": "Autentica√ß√£o de clientes e gera√ß√£o de tokens JWT"
    },
    {
      "name": "Facebook OAuth",
      "description": "Fluxo de autoriza√ß√£o OAuth2 com Facebook. Permite que usu√°rios autorizem o acesso √†s suas p√°ginas do Facebook para postagens automatizadas."
    },
    {
      "name": "Posts",
      "description": "Cria√ß√£o e gerenciamento de postagens no Facebook"
    },
    {
      "name": "Webhooks",
      "description": "Recebimento e consulta de eventos do Facebook"
    },
    {
      "name": "Data Privacy",
      "description": "Endpoints para conformidade com LGPD/GDPR"
    },
    {
      "name": "Legal",
      "description": "Documentos legais e pol√≠ticas"
    }
  ]
}
